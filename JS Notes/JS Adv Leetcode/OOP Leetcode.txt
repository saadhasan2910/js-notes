1. Design HashSet (Easy): Design a HashSet without using any built-in hash table libraries.

2. Design Parking System (Easy): Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of each.

3. Design Circular Queue (Medium): Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle.

4. Design Linked List (Medium): Design your implementation of the singly linked list. You can choose to use a singly or doubly linked list.

5. Serialize and Deserialize Binary Tree (Hard): Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.

6. Design Twitter (Medium): Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and see the tweets of the users they follow.

7. Design Search Autocomplete System (Hard): Design a search autocomplete system for a search engine. Users may input a sentence (at least one word and end with a special character '#'). For each character they type except '#', you need to return the top 3 historical hot sentences that have prefix the same as the part of sentence already typed.